 Traffic Flow Analysis using YOLOv8 

This project analyzes traffic flow from input videos using the YOLOv8 object 
detection model. 
It detects vehicles, counts them, and generates useful outputs like annotated 
videos and vehicle logs. 

 Project Structure 

Traffic Project/ 

+--. vscode/ # VS Code settings and configurations 

+-- input video/ # Folder containing input traffic videos 

¦ +-- traffic.mp4 # Example downloaded video from YouTube 

+-- output/ # Output results generated by the script 

¦ +-- annotated/ # Videos with detected vehicles and annotations 

¦ +-- vehicle log/ # CSV/Excel logs of detected vehicle count 

+-- lane. Json # Lane configuration file (lane coordinates) 

+-- lane/ # Folder for lane-related data or outputs 

+-- traffic_flow_final.py # Main Python script for traffic flow analysis 

+-- requirements.txt # List of required Python dependencies 

+-- yolo8n.pt # pre-trained YOLOv8 model weights 

+-- README.txt # Project documentation (instructions & usage) 

.. Installation 

1. Clone the repository (or copy project folder): 

git clone https://github.com/shawrahul876-wq/traffic-project.git 
cd traffic-project 

2. Create a virtual environment (recommended): 
python -m venv venv 
source venv/bin/activate # On Mac/Linux 
venv\Scripts\activate # On Windows 

3. Install dependencies: 
pip install -r requirements.txt 

4. Download YOLOv8 model weights (if not already in project): 
wget 
https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt 

.. Usage 

1. Place your input video in input video/ folder. 
	Example: input video/traffic.mp4 
2. Run the main script: 
	python traffic_flow_final.py --video input video/traffic.mp4 
3. Outputs will be saved to: 
	o output/annotated/ . Annotated video with detections. 
	o output/vehicle log/ . Log file (.csv) with vehicle counts and stats. 

... Configuration 

	• Lane setup: Edit Lane. Json to define the region of interest (ROI) for 
	    vehicle counting. 
	• Model selection: By default, yolov8n.pt is used (lightweight). You can 
	   replace it with yolov8s.pt, yolov8m.pt, etc. for better accuracy. 

 Example Output 
	• Annotated video: 
	  Bounding boxes around vehicles + counters on screen. 
	• Vehicle log (output/vehicle log/traffic_log.csv): 
	• frame, vehicle_id, vehicle_type, xmin, ymin, xmax,ymax 
	   12,1, car,100,200,250,400 
	   13,2, bus,300,180,450,390 

 Future Improvements 
	• Speed estimation of vehicles. 
	• Congestion detection & traffic density heatmap. 
	• Web dashboard for live monitoring. 


 

 


